@model Tuple<List<ManagerLocationModel>, EditItemModel>
@{
    ViewData["Title"] = "Locations";
}
<div class="text-center">
    <h2>Choose a location for @Model.Item2.ProductName</h2>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(tuple => tuple.Item1.Single().Id)
            </th>
            <th>
                @Html.DisplayNameFor(tuple => tuple.Item1.Single().Name)
            </th>
            <th>
                @Html.DisplayNameFor(tuple => tuple.Item1.Single().Address)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Item1 != null)
        {
            @foreach (var item in Model.Item1)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Address)
                    </td>
                    <td>
                        @* Helpers are also used to tie your views to particular actions in controllers *@
                        @* This is an html helper *@
                        @Html.ActionLink("Choose", "ChooseLocationAction", new { LocationId = item.Id, ItemId = Model.Item2.ItemId })
                        @*@Html.ActionLink("Details", "Details", new { name = item.Name }) |*@
                        @*@Html.ActionLink("Delete", "Delete", new { name = item.Name })*@
                    </td>
                </tr>
            }
        }
        else
        {
            <tr><td>There are no locations. </td></tr>
        }

    </tbody>
</table>